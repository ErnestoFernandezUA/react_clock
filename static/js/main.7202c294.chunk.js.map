{"version":3,"sources":["component/Clock.tsx","App.tsx","index.tsx"],"names":["Clock","state","date","Date","timerId","undefined","startClock","setState","this","setInterval","prevProps","name","props","console","log","clearInterval","toLocaleTimeString","React","Component","App","isClockVisible","clockName","showClock","hideClock","getRandomName","Math","floor","random","className","type","onClick","ReactDOM","render","document","getElementById"],"mappings":"sNAWaA,EAAb,4MACEC,MAAe,CACbC,KAAM,IAAIC,KACVC,aAASC,GAHb,EAuBEC,WAAa,WACX,EAAKC,SAAS,CAAEL,KAAM,IAAIC,QAxB9B,uDAME,WAAqB,IAAD,OAClBK,KAAKD,SAAS,CAAEH,QAASK,aAAY,kBAAM,EAAKH,eAAc,SAPlE,gCAUE,SAAmBI,GACbA,EAAUC,OAASH,KAAKI,MAAMD,MAEhCE,QAAQC,IAAR,qCAA0CJ,EAAUC,KAApD,eAA+DH,KAAKI,MAAMD,SAbhF,kCAiBE,WACMH,KAAKP,MAAMG,SACbW,cAAcP,KAAKP,MAAMG,WAnB/B,oBA2BE,WACE,OACE,oDACoBI,KAAKP,MAAMC,KAAKc,4BA9B1C,GAA2BC,IAAMC,WCF3BC,E,4MACJlB,MAAe,CACbmB,gBAAgB,EAChBC,UAAW,G,EAGbC,UAAY,WACV,EAAKf,SAAS,CAAEa,gBAAgB,K,EAGlCG,UAAY,WACV,EAAKhB,SAAS,CAAEa,gBAAgB,K,EAGlCI,cAAgB,WACd,EAAKjB,SAAS,CAAEc,UAAWI,KAAKC,MAAsB,EAAhBD,KAAKE,a,4CAG7C,WACE,MAAsCnB,KAAKP,MAAnCmB,EAAR,EAAQA,eAAgBC,EAAxB,EAAwBA,UAExB,OACE,sBAAKO,UAAU,MAAf,UACE,6CACA,8BACG,SACAP,KAEFD,EACG,8BAAK,cAAC,EAAD,CAAOT,KAAMU,MAClB,mDAEJ,wBAAQQ,KAAK,SAASC,QAAStB,KAAKc,UAApC,wBAIA,wBAAQO,KAAK,SAASC,QAAStB,KAAKe,UAApC,wBAIA,wBACEM,KAAK,SACLC,QAAStB,KAAKgB,cAFhB,oC,GAxCUP,IAAMC,WAmDTC,ICzDfY,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.7202c294.chunk.js","sourcesContent":["import React from 'react';\n\ntype Props = {\n  name: number;\n};\n\ntype State = {\n  date: Date,\n  timerId: NodeJS.Timer | undefined,\n};\n\nexport class Clock extends React.Component<Props, State> {\n  state: State = {\n    date: new Date(),\n    timerId: undefined,\n  };\n\n  componentDidMount() {\n    this.setState({ timerId: setInterval(() => this.startClock(), 1000) });\n  }\n\n  componentDidUpdate(prevProps: Props) {\n    if (prevProps.name !== this.props.name) {\n      // eslint-disable-next-line no-console\n      console.log(`The Clock was renamed from ${prevProps.name} to ${this.props.name}`);\n    }\n  }\n\n  componentWillUnmount() {\n    if (this.state.timerId) {\n      clearInterval(this.state.timerId);\n    }\n  }\n\n  startClock = () => {\n    this.setState({ date: new Date() });\n  };\n\n  render() {\n    return (\n      <p>\n        {`Current time: ${this.state.date.toLocaleTimeString()}`}\n      </p>\n    );\n  }\n}\n","import React from 'react';\nimport './App.scss';\nimport { Clock } from './component/Clock';\n\ntype State = {\n  isClockVisible: boolean,\n  clockName: number,\n};\n\nclass App extends React.Component<{}, State> {\n  state: State = {\n    isClockVisible: true,\n    clockName: 8,\n  };\n\n  showClock = () => {\n    this.setState({ isClockVisible: true });\n  };\n\n  hideClock = () => {\n    this.setState({ isClockVisible: false });\n  };\n\n  getRandomName = () => {\n    this.setState({ clockName: Math.floor(Math.random() * 8) });\n  };\n\n  render() {\n    const { isClockVisible, clockName } = this.state;\n\n    return (\n      <div className=\"App\">\n        <h1>React clock</h1>\n        <p>\n          {'name: '}\n          {clockName}\n        </p>\n        {isClockVisible\n          ? <div><Clock name={clockName} /></div>\n          : <p>Press &quot;Show Clock&quot;</p>}\n\n        <button type=\"button\" onClick={this.showClock}>\n          Show clock\n        </button>\n\n        <button type=\"button\" onClick={this.hideClock}>\n          Hide clock\n        </button>\n\n        <button\n          type=\"button\"\n          onClick={this.getRandomName}\n        >\n          Set random name\n        </button>\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}